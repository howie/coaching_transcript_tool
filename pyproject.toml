[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "coaching-assistant-core"
version = "2.24.3"
description = "Core logic package for coaching transcript tool"
readme = "README.md"
authors = [
    {name = "Howie", email = "howie@example.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-multipart>=0.0.6",
    "pandas>=2.0.0",
    "openpyxl>=3.1.0",
    "opencc-python-reimplemented>=0.1.7",
    "boto3>=1.34.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "httpx>=0.25.0",
    "python-jose[cryptography]>=3.3.0",
    "google-cloud-storage>=2.14.0",
    "google-cloud-speech>=2.30.0",
    "google-auth>=2.23.0",
    "email-validator>=2.0.0",
    "passlib[bcrypt]>=1.7.4",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "alembic>=1.13.0",
    "celery>=5.3.0",
    "redis>=5.0.0",
    "requests>=2.31.0",
    "sentry-sdk[flask]>=2.37.0",
    "assemblyai>=0.44.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = ["E", "W", "F", "I"]
ignore = ["E501"]  # Let formatter handle line length

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = false
force-sort-within-sections = false
known-first-party = ["coaching_assistant"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[dependency-groups]
dev = [
    "autoflake>=2.3.1",
    "ruff>=0.13.2",
]

[tool.coverage.run]
omit = [
    # Exclude __init__.py files (usually just imports)
    "*/__init__.py",
    # Exclude test files
    "tests/*",
    # Exclude virtual environment
    "*/venv/*",
    "*/virtualenv/*",
    # Exclude setup files
    "setup.py",
    "conftest.py",
    # Exclude app entry points (covered by E2E tests)
    "apps/*/main.py",
    "apps/*/wsgi.py",
    "apps/*/asgi.py",
    # Exclude CLI entry points
    "src/coaching_assistant/cli/__main__.py",
    # Exclude version file (auto-generated)
    "src/coaching_assistant/version.py",
]

[tool.coverage.report]
# Exclude specific patterns from coverage
exclude_lines = [
    # Standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code
    "def __repr__",
    # Don't complain if tests don't hit defensive assertion code
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods
    "@(abc\\.)?abstractmethod",
    # Don't complain about TYPE_CHECKING blocks
    "if TYPE_CHECKING:",
]
