"""Add usage history table for analytics

Revision ID: 3d7a3c607c3f
Revises: e26380bb6576
Create Date: 2025-08-17 10:16:09.458918

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3d7a3c607c3f'
down_revision: Union[str, Sequence[str], None] = 'e26380bb6576'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usage_history',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('recorded_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('sessions_created', sa.Integer(), nullable=False),
    sa.Column('audio_minutes_processed', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('transcriptions_completed', sa.Integer(), nullable=False),
    sa.Column('exports_generated', sa.Integer(), nullable=False),
    sa.Column('storage_used_mb', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('unique_clients', sa.Integer(), nullable=False),
    sa.Column('api_calls_made', sa.Integer(), nullable=False),
    sa.Column('concurrent_sessions_peak', sa.Integer(), nullable=False),
    sa.Column('plan_name', sa.String(length=20), nullable=False),
    sa.Column('plan_limits', sa.JSON(), nullable=False),
    sa.Column('total_cost_usd', sa.DECIMAL(precision=12, scale=4), nullable=False),
    sa.Column('billable_transcriptions', sa.Integer(), nullable=False),
    sa.Column('free_retries', sa.Integer(), nullable=False),
    sa.Column('google_stt_minutes', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('assemblyai_minutes', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('exports_by_format', sa.JSON(), nullable=False),
    sa.Column('avg_processing_time_seconds', sa.DECIMAL(precision=8, scale=2), nullable=False),
    sa.Column('failed_transcriptions', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'period_type', 'period_start', name='uq_user_period_start')
    )
    op.create_index('idx_usage_history_period_type', 'usage_history', ['period_type'], unique=False)
    op.create_index('idx_usage_history_recorded', 'usage_history', ['recorded_at'], unique=False)
    op.create_index('idx_usage_history_user_period', 'usage_history', ['user_id', 'period_start'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_usage_history_user_period', table_name='usage_history')
    op.drop_index('idx_usage_history_recorded', table_name='usage_history')
    op.drop_index('idx_usage_history_period_type', table_name='usage_history')
    op.drop_table('usage_history')
    # ### end Alembic commands ###
